define(["./createTaskProcessorWorker","./defaultValue-f6d5e6da"],(function(t,s){"use strict";let e=[],i=[],n=0,r=0,u=[],c=0;function o(t){const s=[];return u.forEach((function(e){var i,n;i=e,n=t,Math.sqrt((i.x-n.x)*(i.x-n.x)+(i.y-n.y)*(i.y-n.y))<r&&s.push(e)})),s}return t((function(t,s){return e=[],i=[],n=0,r=t.eps,u=t.dataPoints,c=t.minimumSize,u.forEach((function(t){if(!0===t.isVisited)return;t.isVisited=!0;const s=o(t);if(s.length>=c){const r=[];!function(t,s,e){e.push(t),i.push({index:n,start:t,children:s});for(let t=0;t<s.length;t++){const r=s[t];if(!1===r.isVisited){r.isVisited=!0;const t=o(r);t.length>=c&&(s=s.concat(t),i.push({index:n,start:r,children:t}))}!1===r.isClustered&&(r.isClustered=!0,e.push(r))}}(t,s,r),e.push(r),n++}})),{clusters:e}}))}));
