function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i["return"]&&(_r=_i["return"](),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}var DEGREES_PER_RADIAN=180/Math.PI;function toDegrees(radians){return radians*DEGREES_PER_RADIAN}function multiMatrixVector2(matrix2,vector2){var a=matrix2[0];var b=matrix2[1];var c=matrix2[2];var d=matrix2[3];var x=vector2[0];var y=vector2[1];return[a*x+b*y,c*x+d*y]}function addVector2Vector2(v1,v2){return[v1[0]+v2[0],v1[1]+v2[1]]}function matrix2FromRotation(angle){var cosOfAngle=Math.cos(angle);var sinOfAngle=Math.sin(angle);return[cosOfAngle,sinOfAngle,-sinOfAngle,cosOfAngle]}function matrix2Scale(matrix,x,y){return[matrix[0]*x,matrix[1]*x,matrix[2]*y,matrix[3]*y]}function boundingRectangleFromPoints(positions){var result={x:0,y:0,width:0,height:0};var length=positions.length;var minimumX=positions[0][0];var minimumY=positions[0][1];var maximumX=positions[0][0];var maximumY=positions[0][1];for(var i=1;i<length;i++){var p=positions[i];var x=p[0];var y=p[1];minimumX=Math.min(x,minimumX);maximumX=Math.max(x,maximumX);minimumY=Math.min(y,minimumY);maximumY=Math.max(y,maximumY)}result.x=minimumX;result.y=minimumY;result.width=maximumX-minimumX;result.height=maximumY-minimumY;return result}function mod(i,n){return(i%n+n)%n}function distance(A,B){var numOfComponents=A.length;if(numOfComponents!==B.length){throw new Error("distance: \u4E24\u4E2A\u53C2\u6570\u7684\u5206\u91CF\u4E2A\u6570\u5FC5\u987B\u76F8\u7B49\u3002")}if(numOfComponents===1){return Math.abs(A[0]-B[0])}var sum=0;for(var i=0;i<numOfComponents;i++){var Ai=A[i];var Bi=B[i];var Ci=Ai-Bi;sum+=Ci*Ci}return Math.sqrt(sum)}function computeSignedArea(coordinates){var area=0;var n=coordinates.length;for(var i=0;i<=n-1;i++){var _coordinates$i=_slicedToArray(coordinates[i],2),x1=_coordinates$i[0],y1=_coordinates$i[1];var _coordinates$mod=_slicedToArray(coordinates[mod(i+1,n)],2),x2=_coordinates$mod[0],y2=_coordinates$mod[1];area+=x1*y2-x2*y1}area*=1/2;return area}function centerOfMassOfPolygon(coordinates){var signedArea=computeSignedArea(coordinates);var x=0;var y=0;var n=coordinates.length;for(var i=0;i<=n-1;i++){var _coordinates$i2=_slicedToArray(coordinates[i],2),x1=_coordinates$i2[0],y1=_coordinates$i2[1];var _coordinates$mod2=_slicedToArray(coordinates[mod(i+1,n)],2),x2=_coordinates$mod2[0],y2=_coordinates$mod2[1];x+=(x1+x2)*(x1*y2-x2*y1);y+=(y1+y2)*(x1*y2-x2*y1)}x*=1/(6*signedArea);y*=1/(6*signedArea);return{x:x,y:y}}export{distance,computeSignedArea,centerOfMassOfPolygon,toDegrees,matrix2FromRotation,matrix2Scale,multiMatrixVector2,addVector2Vector2,boundingRectangleFromPoints};